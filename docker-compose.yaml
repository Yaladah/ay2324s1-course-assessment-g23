version: "3"
services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    ports:
      - 80:80
    networks:
      - client-side
  base_api:
    build: ./backend_services
    container_name: base_api
    networks:
      - backend-apis
  api_gateway:
    build: ./backend_services/api_gateway
    container_name: api_gateway
    networks:
      - client-side
      - backend-apis
    ports:
      - 8000:8000
    environment:
      - USERS_SERVICE_HOST=users_api
      - SESSIONS_SERVICE_HOST=users_api #sessions_api
      - QUESTIONS_SERVICE_HOST=questions_api
      - MATCHING_SERVICE_HOST=matching_api
      - API_PORT=8000
    depends_on:
      - base_api
      - users_api
      #- sessions_api
      - questions_api
      - matching_api
  users_api:
    build: ./backend_services/users_service/api
    container_name: users_api
    ports:
      - 8001:8000
    networks:
      - backend-apis
      - users
    environment:
      - POSTGRES_HOST=users_database
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - users_database
      - base_api
  questions_api:
    build: ./backend_services/questions_service/api
    container_name: questions_api
    ports:
      - 8002:8000
    networks:
      - backend-apis
      - questions
    environment:
      - POSTGRES_HOST=questions_database
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - questions_database
      - base_api
  matching_api:
    build: ./backend_services/matching_service
    container_name: matching_api
    ports:
      - 8003:8003
    networks:
      - backend-apis
      - matching-queue
    depends_on:
      - base_api
      - rabbitmq
  # sessions_api:
  #   build: ./backend_services/sessions_service
  #   container_name: sessions_api
  #   ports:
  #     - 8000:8000
  #   networks:
  #     - backend_apis
  #   depends_on:
  #     - base_api
  users_database:
    build: ./backend_services/users_service/database
    container_name: users_database
    ports:
      - 5432:5432
    networks:
      - users
    volumes:
      - users-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=${PGDATA}
  questions_database:
    build: ./backend_services/questions_service/database
    container_name: questions_database
    ports:
      - 5433:5432
    networks:
      - questions
    volumes:
      - questions-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=${PGDATA}
  rabbitmq:
    build:
      context: ./backend_services/matching_service/db
      dockerfile: Dockerfile
    ports:
      - "5672:5672"  # RabbitMQ default AMQP port
      - "15672:15672"  # RabbitMQ Management Console port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - matching-queue
volumes:
  users-data:
    external: true
  questions-data:
    external: true
  rabbitmq-data:
    external: true
networks:
  users:
  questions:
  client-side:
  backend-apis:
  matching-queue: